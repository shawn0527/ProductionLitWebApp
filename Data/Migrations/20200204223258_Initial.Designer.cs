// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductionLiteWebApp.Data;

namespace ProductionLiteWebApp.Migrations
{
    [DbContext(typeof(ProductionLiteContext))]
    [Migration("20200204223258_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductionLiteWebApp.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("SubscriptionLevel");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.PhoneNumber", b =>
                {
                    b.Property<int>("PhoneNumberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellPhoneNumber");

                    b.Property<int>("UserId");

                    b.Property<string>("WorkPhoneNumbur");

                    b.HasKey("PhoneNumberId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.Production", b =>
                {
                    b.Property<int>("ProductionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime");

                    b.Property<DateTime>("ProductionTime");

                    b.Property<string>("Type");

                    b.Property<int>("Volume");

                    b.Property<int>("WellId");

                    b.HasKey("ProductionId");

                    b.HasIndex("WellId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime");

                    b.Property<double>("SalePrice");

                    b.Property<DateTime>("SaleTime");

                    b.Property<string>("Type");

                    b.Property<int>("Volume");

                    b.Property<int>("WellId");

                    b.HasKey("SaleId");

                    b.HasIndex("WellId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("UserId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.Well", b =>
                {
                    b.Property<int>("WellId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("API");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Field");

                    b.Property<int>("TD");

                    b.Property<int>("TVD");

                    b.Property<string>("WellName");

                    b.Property<string>("WellType");

                    b.HasKey("WellId");

                    b.ToTable("Wells");
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.PhoneNumber", b =>
                {
                    b.HasOne("ProductionLiteWebApp.Models.User")
                        .WithOne("PhoneNumbers")
                        .HasForeignKey("ProductionLiteWebApp.Models.PhoneNumber", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.Production", b =>
                {
                    b.HasOne("ProductionLiteWebApp.Models.Well")
                        .WithMany("Productions")
                        .HasForeignKey("WellId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.Sale", b =>
                {
                    b.HasOne("ProductionLiteWebApp.Models.Well")
                        .WithMany("Sales")
                        .HasForeignKey("WellId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductionLiteWebApp.Models.User", b =>
                {
                    b.HasOne("ProductionLiteWebApp.Models.Company")
                        .WithMany("UserList")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
